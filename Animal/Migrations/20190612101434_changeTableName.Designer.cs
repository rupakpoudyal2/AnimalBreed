// <auto-generated />
using System;
using Animal.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Animal.Migrations
{
    [DbContext(typeof(AnimalContext))]
    [Migration("20190612101434_changeTableName")]
    partial class changeTableName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Animal.Models.Diseases", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("diseasesNameEng");

                    b.Property<string>("diseasesNameNep");

                    b.Property<string>("shortNote");

                    b.Property<string>("symptom");

                    b.HasKey("id");

                    b.ToTable("dbug_diseases");
                });

            modelBuilder.Entity("Animal.Models.feedFooder", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address");

                    b.Property<string>("adl");

                    b.Property<string>("c");

                    b.Property<string>("cp");

                    b.Property<string>("cultivation");

                    b.Property<string>("df");

                    b.Property<string>("district");

                    b.Property<string>("dm");

                    b.Property<string>("fooderNameEng");

                    b.Property<string>("fooderNameNep");

                    b.Property<string>("grassProduct");

                    b.Property<string>("municipility");

                    b.Property<string>("ndf");

                    b.Property<string>("nitrateScore");

                    b.Property<string>("p");

                    b.Property<string>("price");

                    b.Property<string>("remarks");

                    b.Property<string>("seedHarvestingStorage");

                    b.Property<string>("seedingMethod");

                    b.Property<string>("shortNote");

                    b.Property<string>("state");

                    b.Property<string>("tanni");

                    b.Property<string>("tdn");

                    b.HasKey("id");

                    b.ToTable("dbug_feedFooder");
                });

            modelBuilder.Entity("Animal.Models.Vaccination", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("manufacturedBy");

                    b.Property<string>("vaccinForm");

                    b.Property<string>("vaccinName");

                    b.Property<int?>("vaccinTypeId");

                    b.Property<int?>("vaccinationSubTypeId");

                    b.Property<int?>("vaccinationTypeid");

                    b.HasKey("id");

                    b.HasIndex("vaccinationSubTypeId");

                    b.HasIndex("vaccinationTypeid");

                    b.ToTable("dbug_vaccination");
                });

            modelBuilder.Entity("Animal.Models.VaccinationAnimal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("batchNo");

                    b.Property<string>("charge");

                    b.Property<int>("diseasesId");

                    b.Property<string>("dosage");

                    b.Property<string>("earTagNo");

                    b.Property<string>("receiptNo");

                    b.Property<int>("serviceProviderId");

                    b.Property<int>("vaccinId");

                    b.Property<DateTime>("vaccinationDate");

                    b.Property<int?>("vaccinationid");

                    b.HasKey("id");

                    b.HasIndex("diseasesId");

                    b.HasIndex("vaccinationid");

                    b.ToTable("dbug_vaccinationAnimal");
                });

            modelBuilder.Entity("Animal.Models.VaccinationSubType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SubTypeName");

                    b.Property<int?>("VaccinationTypeid");

                    b.HasKey("id");

                    b.HasIndex("VaccinationTypeid");

                    b.ToTable("dbug_vaccinationSubType");
                });

            modelBuilder.Entity("Animal.Models.VaccinationType", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("shortNote");

                    b.Property<string>("vaccinationName");

                    b.HasKey("id");

                    b.ToTable("dbug_vaccinationType");
                });

            modelBuilder.Entity("Animal.Models.Vaccination", b =>
                {
                    b.HasOne("Animal.Models.VaccinationSubType", "vaccinationSubType")
                        .WithMany()
                        .HasForeignKey("vaccinationSubTypeId");

                    b.HasOne("Animal.Models.VaccinationType", "vaccinationType")
                        .WithMany()
                        .HasForeignKey("vaccinationTypeid");
                });

            modelBuilder.Entity("Animal.Models.VaccinationAnimal", b =>
                {
                    b.HasOne("Animal.Models.Diseases", "diseases")
                        .WithMany("vaccinationAnimals")
                        .HasForeignKey("diseasesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Animal.Models.Vaccination", "vaccination")
                        .WithMany("vaccinationAnimals")
                        .HasForeignKey("vaccinationid");
                });

            modelBuilder.Entity("Animal.Models.VaccinationSubType", b =>
                {
                    b.HasOne("Animal.Models.VaccinationType", "VaccinationType")
                        .WithMany("VaccinationSubTypes")
                        .HasForeignKey("VaccinationTypeid");
                });
#pragma warning restore 612, 618
        }
    }
}
